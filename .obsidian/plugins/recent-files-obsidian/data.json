{
  "recentFiles": [
    {
      "basename": "Strings - C",
      "path": "College/Modules/Programming/Unsorted/Strings - C.md"
    },
    {
      "basename": "Reading Strings - gets() - C",
      "path": "College/Modules/Programming/Unsorted/Reading Strings - gets() - C.md"
    },
    {
      "basename": "String Functions - C",
      "path": "College/Modules/Programming/Unsorted/String Functions - C.md"
    },
    {
      "basename": "Passing Arrays - C",
      "path": "College/Modules/Programming/Unsorted/Passing Arrays - C.md"
    },
    {
      "basename": "Strings and Arrays - C",
      "path": "College/Modules/Programming/Unsorted/Strings and Arrays - C.md"
    },
    {
      "basename": "Home",
      "path": "Home Page/Home.canvas"
    },
    {
      "basename": "Arrays - C",
      "path": "College/Modules/Programming/Arrays - C.md"
    },
    {
      "basename": "$ C - Programming Language",
      "path": "College/Modules/Programming/$ C - Programming Language.md"
    },
    {
      "basename": "Variable Naming Schemes",
      "path": "College/Modules/Programming/Variable Naming Schemes.md"
    },
    {
      "basename": "Symbolic Names - C",
      "path": "College/Modules/Programming/Symbolic Names - C.md"
    },
    {
      "basename": "Subscript and Pointer Notation - C",
      "path": "College/Modules/Programming/Unsorted/Subscript and Pointer Notation - C.md"
    },
    {
      "basename": "Storage Classes - C",
      "path": "College/Modules/Programming/Unsorted/Storage Classes - C.md"
    },
    {
      "basename": "sizeof() - C",
      "path": "College/Modules/Programming/Unsorted/sizeof() - C.md"
    },
    {
      "basename": "Semicolons - C",
      "path": "College/Modules/Programming/Unsorted/Semicolons - C.md"
    },
    {
      "basename": "Loops - C",
      "path": "College/Modules/Programming/Loops - C.md"
    },
    {
      "basename": "If , If else, While, Do While- C",
      "path": "College/Modules/Programming/If , If else, While, Do While- C.md"
    },
    {
      "basename": "Precision Specification - C",
      "path": "College/Modules/Programming/Precision Specification - C.md"
    },
    {
      "basename": "Switch Statement - C",
      "path": "College/Modules/Programming/Switch Statement - C.md"
    },
    {
      "basename": "Ampersand - C",
      "path": "College/Modules/Programming/Ampersand - C.md"
    },
    {
      "basename": "Logical Operators - C",
      "path": "College/Modules/Programming/Logical Operators - C.md"
    },
    {
      "basename": "Faster Character Input Output - C",
      "path": "College/Modules/Programming/Faster Character Input Output - C.md"
    },
    {
      "basename": "Keyboard Input - C",
      "path": "College/Modules/Programming/Keyboard Input - C.md"
    },
    {
      "basename": "Keyboard Output - C",
      "path": "College/Modules/Programming/Keyboard Output - C.md"
    },
    {
      "basename": "Variables - C",
      "path": "College/Modules/Programming/Variables - C.md"
    },
    {
      "basename": "Delimiters - C",
      "path": "College/Modules/Programming/Delimiters - C.md"
    },
    {
      "basename": "CC",
      "path": "Templates/CC.md"
    },
    {
      "basename": "Call Stack",
      "path": "College/Modules/Algorithm Design and Problem Solving/Call Stack.md"
    },
    {
      "basename": "Adding and Subtracting Matrices",
      "path": "College/Modules/Mathematics/Adding and Subtracting Matrices.md"
    },
    {
      "basename": "Scope - C",
      "path": "College/Modules/Programming/Unsorted/Scope - C.md"
    },
    {
      "basename": "Returning Variables - C",
      "path": "College/Modules/Programming/Unsorted/Returning Variables - C.md"
    },
    {
      "basename": "Refactoring Code",
      "path": "College/Modules/Programming/Unsorted/Refactoring Code.md"
    },
    {
      "basename": "Random Data - C",
      "path": "College/Modules/Programming/Unsorted/Random Data - C.md"
    },
    {
      "basename": "Printing Out Strings - puts() - C",
      "path": "College/Modules/Programming/Unsorted/Printing Out Strings - puts() - C.md"
    },
    {
      "basename": "Printing a 2D Array - C",
      "path": "College/Modules/Programming/Unsorted/Printing a 2D Array - C.md"
    },
    {
      "basename": "Pointers and Arrays - C",
      "path": "College/Modules/Programming/Unsorted/Pointers and Arrays - C.md"
    },
    {
      "basename": "Pointers - C",
      "path": "College/Modules/Programming/Unsorted/Pointers - C.md"
    },
    {
      "basename": "Pass by Value & Pass by Reference - C",
      "path": "College/Modules/Programming/Unsorted/Pass by Value & Pass by Reference - C.md"
    },
    {
      "basename": "Non-Null Terminated String - C",
      "path": "College/Modules/Programming/Unsorted/Non-Null Terminated String - C.md"
    },
    {
      "basename": "Memory Leak",
      "path": "College/Modules/Programming/Unsorted/Memory Leak.md"
    },
    {
      "basename": "Initializing a 2D Array",
      "path": "College/Modules/Programming/Unsorted/Initializing a 2D Array.md"
    },
    {
      "basename": "Indentation - C",
      "path": "College/Modules/Programming/Unsorted/Indentation - C.md"
    },
    {
      "basename": "Global and Local Variables - C",
      "path": "College/Modules/Programming/Unsorted/Global and Local Variables - C.md"
    },
    {
      "basename": "Functions - C",
      "path": "College/Modules/Programming/Unsorted/Functions - C.md"
    },
    {
      "basename": "free() - C",
      "path": "College/Modules/Programming/Unsorted/free() - C.md"
    },
    {
      "basename": "Dynamic Memory Allocation - C",
      "path": "College/Modules/Programming/Unsorted/Dynamic Memory Allocation - C.md"
    },
    {
      "basename": "Dereference Operators - C",
      "path": "College/Modules/Programming/Unsorted/Dereference Operators - C.md"
    },
    {
      "basename": "Compiler",
      "path": "College/Modules/Programming/Unsorted/Compiler.md"
    }
  ],
  "omittedPaths": [],
  "omittedTags": [],
  "omitBookmarks": false
}