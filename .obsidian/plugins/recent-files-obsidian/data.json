{
  "recentFiles": [
    {
      "basename": "TU856-1 Results",
      "path": "College/TU856-1/TU856-1 Results.md"
    },
    {
      "basename": "CMPU 1001 - Algorithm Design and Problem Solving",
      "path": "College/TU856-1/CMPU 1001 - Algorithm Design and Problem Solving.md"
    },
    {
      "basename": "Home",
      "path": "Home Page/Home.canvas"
    },
    {
      "basename": "Von Neumann Architecture",
      "path": "College/Computer Architecture and Technology/Von Neumann Architecture.md"
    },
    {
      "basename": "CPU",
      "path": "College/Computer Architecture and Technology/CPU.md"
    },
    {
      "basename": "Computer Architecture",
      "path": "College/Computer Architecture and Technology/Computer Architecture.md"
    },
    {
      "basename": "free() - C",
      "path": "College/Programming/free() - C.md"
    },
    {
      "basename": "Function Signatures - C",
      "path": "College/Programming/Function Signatures - C.md"
    },
    {
      "basename": "Declaring and Initializing - C",
      "path": "College/Programming/Declaring and Initializing - C.md"
    },
    {
      "basename": "Delimeters - C",
      "path": "College/Programming/Delimeters - C.md"
    },
    {
      "basename": "Decimal Places and Leading Zeros - C",
      "path": "College/Programming/Decimal Places and Leading Zeros - C.md"
    },
    {
      "basename": "Casting - C",
      "path": "College/Programming/Casting - C.md"
    },
    {
      "basename": "Compiler",
      "path": "College/Programming/Compiler.md"
    },
    {
      "basename": "Data Types",
      "path": "College/Programming/Data Types.md"
    },
    {
      "basename": "Subscript and Pointer Notation - C",
      "path": "College/Programming/Subscript and Pointer Notation - C.md"
    },
    {
      "basename": "Symbolic Names - C",
      "path": "College/Programming/Symbolic Names - C.md"
    },
    {
      "basename": "Unsigned Variables - C",
      "path": "College/Programming/Unsigned Variables - C.md"
    },
    {
      "basename": "Variable Naming Schemes",
      "path": "College/Programming/Variable Naming Schemes.md"
    },
    {
      "basename": "Variables - C",
      "path": "College/Programming/Variables - C.md"
    },
    {
      "basename": "Printing Out Strings - puts() - C",
      "path": "College/Programming/Printing Out Strings - puts() - C.md"
    },
    {
      "basename": "sizeof() - C",
      "path": "College/Programming/sizeof() - C.md"
    },
    {
      "basename": "Strings - C",
      "path": "College/Programming/Strings - C.md"
    },
    {
      "basename": "Dynamic Memory Allocation - C",
      "path": "College/Programming/Dynamic Memory Allocation - C.md"
    },
    {
      "basename": "Dereference Operators - C",
      "path": "College/Programming/Dereference Operators - C.md"
    },
    {
      "basename": "Arrays - C",
      "path": "College/Programming/Arrays - C.md"
    },
    {
      "basename": "Ampersand - C",
      "path": "College/Programming/Ampersand - C.md"
    },
    {
      "basename": "Iterative  Factorial Algorithm",
      "path": "College/Algorithm Design and Problem Solving/Iterative  Factorial Algorithm.md"
    },
    {
      "basename": "Functional Programming Language",
      "path": "College/Algorithm Design and Problem Solving/Functional Programming Language.md"
    },
    {
      "basename": "Fibonacci Numbers",
      "path": "College/Algorithm Design and Problem Solving/Fibonacci Numbers.md"
    },
    {
      "basename": "Call Stack",
      "path": "College/Algorithm Design and Problem Solving/Call Stack.md"
    },
    {
      "basename": "Base Case",
      "path": "College/Algorithm Design and Problem Solving/Base Case.md"
    },
    {
      "basename": "Algorithms",
      "path": "College/Algorithm Design and Problem Solving/Algorithms.md"
    },
    {
      "basename": "Recursive Fibonacci Algorithm",
      "path": "College/Algorithm Design and Problem Solving/Recursive Fibonacci Algorithm.md"
    },
    {
      "basename": "Serial Communications",
      "path": "UNSORTED/Serial Communications.md"
    },
    {
      "basename": "Keyboard Input - Microprocessors",
      "path": "College/Microprocessors Systems/Keyboard Input - Microprocessors.md"
    },
    {
      "basename": "Incrementing Decimal Numbers - Microcontroller",
      "path": "College/Microprocessors Systems/Incrementing Decimal Numbers - Microcontroller.md"
    },
    {
      "basename": "Incrementing Hexadecimal Numbers - Microcontroller",
      "path": "College/Microprocessors Systems/Incrementing Hexadecimal Numbers - Microcontroller.md"
    },
    {
      "basename": "Strings and Arrays - C",
      "path": "College/Programming/Strings and Arrays - C.md"
    },
    {
      "basename": "Reading Strings - gets() - C",
      "path": "College/Programming/Reading Strings - gets() - C.md"
    },
    {
      "basename": "Call Stack",
      "path": "UNSORTED/Call Stack.md"
    },
    {
      "basename": "Descartes - Meditations on First Philosophy",
      "path": "Notes/Descartes - Meditations on First Philosophy.md"
    },
    {
      "basename": "Serial Communications",
      "path": "College/Microprocessors Systems/Serial Communications.md"
    },
    {
      "basename": "Pull-up Resistor",
      "path": "College/Microprocessors Systems/Pull-up Resistor.md"
    },
    {
      "basename": "Bit-shifting and Masks(UNFINISHED) - c",
      "path": "College/Microprocessors Systems/Bit-shifting and Masks(UNFINISHED) - c.md"
    },
    {
      "basename": "Synchronous and Asynchronous Serial  Communications",
      "path": "College/Microprocessors Systems/Synchronous and Asynchronous Serial  Communications.md"
    },
    {
      "basename": "Little Endian - Big Endian",
      "path": "College/Microprocessors Systems/Little Endian - Big Endian.md"
    },
    {
      "basename": "Microcontrollers",
      "path": "College/Microprocessors Systems/Microcontrollers.md"
    },
    {
      "basename": "Converting Binary and Hexadecimal",
      "path": "College/Microprocessors Systems/Converting Binary and Hexadecimal.md"
    }
  ],
  "omittedPaths": [],
  "omittedTags": [],
  "omitBookmarks": false
}